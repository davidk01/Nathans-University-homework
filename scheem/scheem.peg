start = expression

expression = ignored_stuff* expr:list_expression? ignored_stuff* {return expr;}

list_expression = atom / regular_list / quoted_list

regular_list = "(" h:atom t:(space+ (atom / regular_list / quoted_list))* space* ")"
  {return [h].concat(t.map(function(x){return x[1];}));}

quoted_list = "'" "(" h:atom t:(space+ (atom / quoted_list / regular_list))* space* ")" 
  {return ['quote', [h].concat(t.map(function(x){return x[1];}))];}

atom = n:number {return n;} / at:validchars+ {return at.join("");} / regular_list / quoted_list

validchars = [\<\>0-9a-zA-Z_?!+\-=@#$%^&*/.]

comment = ";;" (!newline .)*

number = z:"0" {return 0;} / h:[1-9] t:[0-9]* {return parseInt(h + t.join(""));}

delimited_comment = comment newline

multiline_comment = delimited_comment+

newline = [\r\n]

space = [\t ]

ignored_stuff = multiline_comment / space
